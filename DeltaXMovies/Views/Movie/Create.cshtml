@model DeltaXMovies.Models.Movie

@{
    ViewBag.Title = "Create";

}

<h2>Create</h2>

@using (Html.BeginForm("Create", "Movie", null, FormMethod.Post,
                                          new { enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>Movie</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.MovieName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.MovieName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.MovieName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.MoviePlot, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.MoviePlot, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.MoviePlot, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.MovieYOR, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.MovieYOR, new { htmlAttributes = new { @class = "form-control date" } })
                @Html.ValidationMessageFor(model => model.MovieYOR, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.MovieProducerId, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("MovieProducerId", (IEnumerable<SelectListItem>)ViewBag.ProducersList, "Select Producer", new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.MovieProducerId, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.MovieActorIds, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("MovieActorIds", (IEnumerable<SelectListItem>)ViewBag.ActorsList, new { @class = "form-control", multiple = "multiple" })
                @Html.ValidationMessageFor(model => model.MovieProducerId, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.MoviePoster, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <input type="file" name="image" id="image" style="width: 50%;" accept="image/*" />
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    <script type="text/javascript" src="http://ajax.aspnetcdn.com/ajax/jquery.ui/1.10.2/jquery-ui.js"></script>

    <script type="text/javascript">
        $(document).ready(function () {
            $('#MovieYOR').datepicker({
                dateFormat: "M dd, yy",
                changeMonth: true,
                changeYear: true,
                maxDate: "-5y",
                minDate: new Date(1900, 01, 01)
            });


        });

    </script>
}
